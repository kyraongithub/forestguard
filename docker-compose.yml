services:
  ############
  # DATABASE #
  ############

  postgres:
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=forest_guard
    logging:
      options:
        max-size: 10m
        max-file: '3'
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=blockchain
    ports:
      - '9000:9000'
      - '9090:9090'
    volumes:
      - minio-data:/data
    command: server /data --address ":9000" --console-address ":9090"

  minio-setup:
    image: minio/mc
    depends_on:
      minio:
        condition: service_started
    entrypoint: >
      /bin/sh -c " echo '### MinIO setup started' && mc alias set local http://minio:9000 admin blockchain && if mc ls local/forest-guard
      2>/dev/null; then
        echo 'Bucket local/forest-guard already exists';
      else
        mc mb local/forest-guard &&
        mc anonymous set download local/forest-guard
      fi && echo '### MinIO setup ended' "

  ##############
  # BLOCKCHAIN #
  ##############
  blockchain-network:
    build:
      context: ./blockchain/network
      dockerfile: Dockerfile
    depends_on:
      minio-setup:
        condition: service_completed_successfully
    restart: unless-stopped
    ports:
      - '8545:8545'

  blockchain-network-setup:
    build:
      context: ./blockchain/network-setup
      dockerfile: Dockerfile
      args:
        SC_DEPLOYMENT_MNEMONIC: ${SC_DEPLOYMENT_MNEMONIC}
        SC_TOKEN_NAME: ${SC_TOKEN_NAME}
        SC_TOKEN_SYMBOL: ${SC_TOKEN_SYMBOL}
    depends_on:
      blockchain-network:
        condition: service_started
    environment:
      DEV_NODE_URL: 'http://blockchain-network:8545'

  #########
  # UTILS #
  #########

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_LOGS: '-error'

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    ports:
      - '8080:8080'
    command:
      - start-dev
      - --import-realm
    networks:
      default:
    environment:
      KC_HEALTH_ENABLED: 'true'
      KC_LOG_LEVEL: ERROR
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - './keycloak/realm/Unisoft-realm.json:/opt/keycloak/data/import/realm.json'
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/localhost/8080'
      start_period: 10s
      interval: 5s
      retries: 10

networks:
  default:
    name: forest-guard-dev
    driver: bridge

volumes:
  postgres-data:
  minio-data:
